{"version":3,"sources":["components/InstanceList.js","components/Instance.js","App.js","serviceWorker.js","index.js"],"names":["InstanceList","id","e","this","props","selectInstance","_this","react_default","a","createElement","class","title","items","map","item","key","instanceId","name","type","onClick","React","Component","Instance","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","raiseExernalEventApproved","bind","assertThisInitialized","raiseExernalEventNotApproved","rewindInstance","eventRaisedHandler","rewindInstanceHandler","customStatus","disabled","value","createdTime","lastUpdatedTime","runtimeStatus","JSON","stringify","input","historyEvents","REACT_APP_API_URL","FUNCTION_APP_KEY","InstanceManagerApp","state","poster","text","error","isLoaded","selected","handlePosterChange","handleTextChange","handleSubmit","handleSelectInstance","handleEventRasied","handleRewindInstance","_this$state","handleRaiseExernalEvent","message","className","onSubmit","htmlFor","onChange","components_InstanceList","filter","components_Instance","instance","axios","post","then","response","console","log","catch","status","updatedSelected","self","approvedBy","setState","param","_this2","fetch","res","json","result","target","preventDefault","length","newInstnace","from","data","concat","_this3","process","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3346d5aa.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\nclass InstanceList extends React.Component {\r\n\r\n\r\n\r\n  selectInstance(id, e) {\r\n    this.props.selectInstance(id);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <article class=\"card\">\r\n        <header>\r\n          <h3>{this.props.title}</h3>\r\n        </header>\r\n        <footer>\r\n          {this.props.items.map(item => (\r\n            <label key={item.instanceId} class=\"stack\">\r\n              <input name=\"stack\" type=\"radio\" onClick={() => this.selectInstance(item.instanceId)} />\r\n              <span class=\"button toggle\" >\r\n                <span class=\"icon-file-code\"></span>  {item.instanceId}\r\n              </span>\r\n            </label>\r\n          ))}\r\n        </footer>\r\n      </article>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport default InstanceList;\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\n\r\n\r\n\r\n\r\nclass Instance extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.raiseExernalEventApproved = this.raiseExernalEventApproved.bind(this);\r\n        this.raiseExernalEventNotApproved = this.raiseExernalEventNotApproved.bind(this);\r\n        this.rewindInstance = this.rewindInstance.bind(this);\r\n\r\n    }\r\n\r\n    raiseExernalEventApproved() {\r\n        this.props.eventRaisedHandler(2);\r\n    }\r\n\r\n    rewindInstance() {\r\n        this.props.rewindInstanceHandler();\r\n    }\r\n\r\n    raiseExernalEventNotApproved() {\r\n        this.props.eventRaisedHandler(3);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <article class=\"card instance-deatils\">\r\n                    <header>\r\n                        <h3>{this.props.item.instanceId}</h3>\r\n                    </header>\r\n                    <fieldset class=\"flex one\">\r\n                      { this.props.item.customStatus === 'WaitingForManualReviewCompleted' &&\r\n                        <button onClick={this.raiseExernalEventApproved}>Approve message</button>\r\n                      }\r\n                      { this.props.item.customStatus === 'WaitingForManualReviewCompleted' &&\r\n                         <button onClick={this.raiseExernalEventNotApproved}>Reject message</button> \r\n                      }\r\n                        <button onClick={this.rewindInstance}>\r\n                                    Rewind instance\r\n                        </button>\r\n                        <label><h4>InstanceId</h4> <input\r\n                            id=\"InstanceId\"\r\n                            disabled=\"true\"\r\n                            value={this.props.item.instanceId}\r\n                        />  </label>\r\n\r\n                        <label><h4>Created time</h4><input\r\n                            id=\"createdTime\"\r\n                            disabled=\"true\"\r\n                            value={this.props.item.createdTime}\r\n                        />  </label>\r\n\r\n                        <label><h4>Last updated time</h4> <input\r\n                            id=\"lastUpdatedTime\"\r\n                            disabled=\"true\"\r\n                            value={this.props.item.lastUpdatedTime}\r\n                        />  </label>\r\n\r\n                        <label><h4>Run time status</h4> <input\r\n                            id=\"runtimestatus\"\r\n                            disabled=\"true\"\r\n                            value={this.props.item.runtimeStatus}\r\n                        />  </label>\r\n\r\n\r\n                        <label><h4>Custom status</h4><input\r\n                            id=\"runtimestatus\"\r\n                            disabled=\"true\"\r\n                            value={this.props.item.customStatus}\r\n                        />  </label>\r\n\r\n\r\n                        <label><h4>Workflow input</h4><textarea\r\n                            id=\"worflowInput\"\r\n                            disabled=\"true\"\r\n                            value={JSON.stringify(this.props.item.input)}\r\n                        />  </label>\r\n\r\n                        <label><h4>Event history</h4>  <textarea\r\n                            id=\"eventHistroy\"\r\n                            disabled=\"true\"\r\n                            value={JSON.stringify(this.props.item.historyEvents)}\r\n                        />  </label>\r\n\r\n                    </fieldset>\r\n\r\n                </article>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Instance;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport InstanceList from './components/InstanceList'\r\nimport Instance from './components/Instance'\r\nimport './App.css';\r\n\r\nconst REACT_APP_API_URL=\"https://tweetcheckerworkflow.azurewebsites.net\";\r\nconst FUNCTION_APP_KEY = \"wqxSZcmLwgaUzXnlZCNwgNN87hH2Syb8H3KFvHev0lDQ9bnYhrb4aw==\"\r\n\r\n\r\nclass InstanceManagerApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [], poster: '', text: '', error: null,\r\n      isLoaded: false, selected: null\r\n    };\r\n    this.handlePosterChange = this.handlePosterChange.bind(this);\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleSelectInstance = this.handleSelectInstance.bind(this);\r\n    this.handleEventRasied = this.handleEventRasied.bind(this);\r\n    this.handleRewindInstance = this.handleRewindInstance.bind(this);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { error, isLoaded, items, selected, handleSelectInstance, handleRaiseExernalEvent,handleRewindInstance } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div className=\"App\">\r\n          <div className=\"flex four\">\r\n         \r\n            <div>\r\n              <article class=\"card\">\r\n                <header>\r\n                  <h3>Start new workflow</h3>\r\n                </header>\r\n                <footer>\r\n\r\n                  <form onSubmit={this.handleSubmit}>\r\n                    <label htmlFor=\"poster\">\r\n                      Created by\r\n                </label>\r\n\r\n                    <input\r\n                      id=\"poster\"\r\n                      onChange={this.handlePosterChange}\r\n                      value={this.state.poster}\r\n                    />\r\n                    <label htmlFor=\"message\">\r\n                      Message\r\n                </label>\r\n\r\n                    <input\r\n                      id=\"message\"\r\n                      onChange={this.handleTextChange}\r\n                      value={this.state.text}\r\n                    />\r\n                    <button>\r\n                      Create new instance\r\n                   </button>\r\n                  </form>\r\n                </footer>\r\n              </article>\r\n              <InstanceList items={items.filter(item => item.runtimeStatus === \"Running\")} title=\"Running workflows\" selectInstance={this.handleSelectInstance}></InstanceList>\r\n              <InstanceList items={items.filter(item => item.runtimeStatus === \"Completed\")} title=\"Completed workflows\" selectInstance={this.handleSelectInstance}></InstanceList>\r\n              <InstanceList items={items.filter(item => item.runtimeStatus === \"Failed\")} title=\"Failed workflows\" selectInstance={this.handleSelectInstance}></InstanceList>\r\n            </div>\r\n            <div class=\"two-third\">\r\n              {selected != null &&\r\n                <Instance item={selected} eventRaisedHandler={this.handleEventRasied} rewindInstanceHandler={this.handleRewindInstance}></Instance>\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      );\r\n\r\n    }\r\n  }\r\n\r\n  handleRewindInstance() {\r\n\r\n    var instance = this.state.selected.instanceId;\r\n    var updatedSelected = this.state.selected;\r\n    updatedSelected.customStatus = \"\";\r\n    axios.post(REACT_APP_API_URL+'/runtime/webhooks/durabletask/instances/' + instance + \"/rewind?reason=error&code=\" + FUNCTION_APP_KEY)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleEventRasied(status) {\r\n\r\n    var instance = this.state.selected.instanceId + \"/raiseEvent/ManualReviewCompleted\";\r\n    var updatedSelected = this.state.selected;\r\n    var self = this;\r\n    updatedSelected.customStatus = \"\";\r\n    axios.post(REACT_APP_API_URL+'/runtime/webhooks/durabletask/instances/' + instance + \"?code=\" + FUNCTION_APP_KEY, { 'status': status, 'approvedBy' : \"admin\" })\r\n      .then(function (response) {\r\n\r\n        self.setState({\r\n          selected: updatedSelected\r\n        });\r\n\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  handleSelectInstance(param, e) {\r\n    \r\n    fetch(REACT_APP_API_URL+\"/runtime/webhooks/durabletask/instances/\" + param + \"?showHistory=true&code=\" + FUNCTION_APP_KEY)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            selected: result\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n  handleTextChange(e) {\r\n\r\n\r\n    this.setState({ text: e.target.value });\r\n  }\r\n\r\n\r\n  handlePosterChange(e) {\r\n\r\n\r\n    this.setState({ poster: e.target.value });\r\n  }\r\n\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!this.state.text.length) {\r\n      return;\r\n    }\r\n    const newInstnace = {\r\n      text: this.state.text,\r\n      from: this.state.poster,\r\n      runtimeStatus : \"Running\"\r\n    };\r\n\r\n    var self = this;\r\n    axios.post(REACT_APP_API_URL+'/api/function_HttpStart', newInstnace)\r\n      .then(function (response) {\r\n        newInstnace.instanceId = response.data.id\r\n        self.setState(state => ({\r\n          items: state.items.concat(newInstnace),\r\n          text: '',\r\n          poster: ''\r\n        }));\r\n        \r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    console.log(process.env);\r\n    fetch(REACT_APP_API_URL+\"/runtime/webhooks/durabletask/instances?code=\" + FUNCTION_APP_KEY)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default InstanceManagerApp;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}